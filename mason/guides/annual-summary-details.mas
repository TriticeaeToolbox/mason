<%args>
  $schema => undef,
  $year => (localtime)[5] + 1900,
  $program => undef
</%args>

<%init>
  use Data::Dumper;
  use CXGN::DB::Connection;
  use SGN::View::Stock qw|breeding_programs|;
  my $dbh = CXGN::DB::Connection->new();

  # Set current and available years
  my $current_year = (localtime)[5] + 1900;
  my @available_years = ($current_year-5..$current_year+1);

  # Get all breeding programs
  my $breeding_programs = SGN::View::Stock::breeding_programs($schema);

  # Get the breeding program name
  my $q_bp = "SELECT name FROM public.project WHERE project_id = ?";
  my $sth_bp = $dbh->prepare($q_bp);
  $sth_bp->execute($program);
  my ($program_name) = $sth_bp->fetchrow_array();

  # Get the genotyping project details
  my $q_geno = "SELECT gp.project_id AS genotyping_project_id, gp.name AS genotyping_project_name, 
                  pp.nd_protocol_id AS genotyping_protocol_id, pp.name AS genotyping_protocol,
                  COUNT(DISTINCT(amv.accession_id)) AS accession_count
                FROM breeding_programsxgenotyping_projects AS mv
                LEFT JOIN project AS gp ON (gp.project_id = mv.genotyping_project_id)
                LEFT JOIN project AS bp ON (bp.project_id = mv.breeding_program_id)
                LEFT JOIN public.projectprop AS py ON (gp.project_id = py.project_id)
                  AND py.type_id = (SELECT cvterm_id FROM public.cvterm WHERE name = 'project year')
                LEFT JOIN public.accessionsxgenotyping_projects AS amv ON (amv.genotyping_project_id = gp.project_id)
                LEFT JOIN public.genotyping_projectsxgenotyping_protocols AS gmv ON (gmv.genotyping_project_id = gp.project_id)
                LEFT JOIN public.nd_protocol AS pp ON (gmv.genotyping_protocol_id = pp.nd_protocol_id)
                WHERE py.value = ? AND mv.breeding_program_id = ?
                GROUP BY gp.project_id, gp.name, pp.nd_protocol_id, pp.name
                ORDER BY gp.name;";
  my $sth_geno = $dbh->prepare($q_geno);
  $sth_geno->execute($year, $program);
  my %geno_data;
  while ( my ($project_id, $project_name, $protocol_id, $protocol_name, $accession_count ) = $sth_geno->fetchrow_array() ) {
    $geno_data{$project_name} = {
      project_id => $project_id,
      project_name => $project_name,
      protocol_id => $protocol_id,
      protocol_name => $protocol_name,
      accession_count => $accession_count
    };
  }

  # Get the phenotyping trial details
  my $q_pheno = "SELECT project.project_id, project.name, ppd.value AS planting_date, phd.value AS harvest_date,
                  COUNT(DISTINCT(materialized_phenoview.trait_id)) AS trait_count,
                  COUNT(DISTINCT(cvterm.cvterm_id)) FILTER (WHERE cvterm.name LIKE '%UAS%') AS trait_count_drone,
                  COUNT(DISTINCT(cvterm.cvterm_id)) FILTER (WHERE cvterm.name NOT LIKE '%UAS%') AS trait_count_agro,
                  STRING_AGG(DISTINCT(regexp_replace(cvterm.name, '\\|day [0-9]+', '')), ', ') AS trait_names,
                  COUNT(DISTINCT(materialized_phenoview.stock_id)) AS plot_count
                FROM public.project
                LEFT JOIN public.projectprop AS py ON (project.project_id = py.project_id)
                  AND py.type_id = (SELECT cvterm_id FROM public.cvterm WHERE name = 'project year')
                LEFT JOIN public.projectprop AS phd ON (project.project_id = phd.project_id)
                  AND phd.type_id = (SELECT cvterm_id FROM public.cvterm WHERE name = 'project_harvest_date')
                LEFT JOIN public.projectprop AS ppd ON (project.project_id = ppd.project_id)
                  AND ppd.type_id = (SELECT cvterm_id FROM public.cvterm WHERE name = 'project_planting_date')
                LEFT JOIN public.project_relationship AS pr ON (project.project_id = pr.subject_project_id)
                  AND pr.type_id = (SELECT cvterm_id FROM public.cvterm WHERE name = 'breeding_program_trial_relationship')
                LEFT JOIN public.project AS bp ON (pr.object_project_id = bp.project_id)
                LEFT JOIN public.materialized_phenoview ON (project.project_id = materialized_phenoview.trial_id)
                LEFT JOIN public.cvterm ON (materialized_phenoview.trait_id = cvterm.cvterm_id)
                WHERE py.value = ? AND bp.project_id = ?
                  AND project.project_id IN (SELECT DISTINCT(trial_id) FROM public.materialized_phenoview)
                GROUP BY project.project_id, project.name, project.create_date, ppd.value, phd.value, py.value, bp.project_id, bp.name;";
  my $sth_pheno = $dbh->prepare($q_pheno);
  $sth_pheno->execute($year, $program);
  my %pheno_data;
  while ( my ($project_id, $project_name, $planting_date, $harvest_date, $trait_count, $trait_count_drone, $trait_count_agro, $trait_names, $plot_count ) = $sth_pheno->fetchrow_array() ) {
    $pheno_data{$project_name} = {
      project_id => $project_id,
      project_name => $project_name,
      planting_date => $planting_date,
      harvest_date => $harvest_date,
      trait_count => $trait_count,
      trait_count_drone => $trait_count_drone,
      trait_count_agro => $trait_count_agro,
      trait_names => $trait_names,
      plot_count => $plot_count
    };
  }
</%init>

<& "/page/page_title.mas", title => "Annual Data Summary Details" &>

<div style="display: flex; gap: 30px">
  <div>
    <h2>Year</h2>
    <div class="form-group">
      <select id="year" class="form-control">
% foreach (@available_years) {
%   if ( $_ eq $year ) {
        <option selected><% $_ %></option>
%   } else {
        <option><% $_ %></option>
%   }
% }
      </select>
    </div>
  </div>
  <div>
    <h2>Breeding Program</h2>
    <div class="form-group">
      <select id="breeding_program" class="form-control">
% foreach (@$breeding_programs) {
%   if ( $_->[0] eq $program ) {
        <option value="<% $_->[0] %>" selected><% $_->[1] %></option>
%   } elsif ( $_->[0] ne 0 ) {
        <option value="<% $_->[0] %>"><% $_->[1] %></option>
%   }
% }
      </select>
    </div>
  </div>
</div>

<br />

<h2>Genotyping Projects</h2>

<p class="description">
  This table shows the Genotyping Projects that were added by the <strong><% $program_name %></strong>
  breeding program and have a year set to <strong><% $year %></strong>.  It also includes the protocol that 
  is associated with the project and the number of accessions that were sampled by the project. 
  Click the project or protocol name to view more details about the specific project or protocol.
  Click the download link to download the original VCF file that was loaded for the specific project.
</p>

<table class="summary-table">
  <tr>
    <th>Genotyping Project</th>
    <th>Genotyping Protocol</th>
    <th>Project Accession Count</th>
    <th>Protocol Marker Count</th>
    <th>Download</th>
  </tr>
% foreach my $key (sort keys %geno_data) {
  <tr>
    <td>
      <a href="/breeders/trial/<% $geno_data{$key}->{'project_id'} %>">
        <% $geno_data{$key}->{'project_name'} %>
      </a>
    </td>
    <td>
      <a href="/breeders_toolbox/protocol/<% $geno_data{$key}->{'protocol_id'} %>">
        <% $geno_data{$key}->{'protocol_name'} %>
      </a>
    </td>
    <td><% $geno_data{$key}->{'accession_count'} %></td>
    <td class="marker-count" data-id="<% $geno_data{$key}->{'protocol_id'} %>">...</td>
    <td id="geno-download-<% $geno_data{$key}->{'project_id'} %>" class="geno-download" data-id="<% $geno_data{$key}->{'project_id'} %>">...</td>
  </tr>
% }
</table>

<br />

<h2>Phenotyping Trials</h2>

<p class="description">
  This table shows the Phenotyping Trials that were added by the <strong><% $program_name %></strong>
  breeding program and have a harvest year set to <strong><% $year %></strong>.  It also includes 
  the number of traits that were observed in the trial and the total number of plots in the trial.
  Click the trial name to view more details about the specific trial.  Click the download link to download 
  an Excel spreadsheet containing all of the trait observations saved for the specific trial.
</p>

<table class="summary-table">
  <tr>
    <th>Phenotyping Trial</th>
    <th>Plot Layout?</th>
    <th>Planting Date?</th>
    <th>Harvest Date?</th>
    <th>Agro Traits?</th>
    <th>Drone Traits?</th>
    <th>Trait Count</th>
    <th>Trait Names</th>
    <th>Plot Count</th>
    <th>Donwload</th>
  </tr>
% foreach my $key (sort keys %pheno_data) {
  <tr>
    <td>
      <a href="/breeders/trial/<% $pheno_data{$key}->{'project_id'} %>">
        <% $pheno_data{$key}->{'project_name'} %>
      </a>
    </td>
    <td id="pheno-layout-<% $pheno_data{$key}->{'project_id'} %>" class="pheno-layout" data-id="<% $pheno_data{$key}->{'project_id'} %>">...</td>
    <td>
% if ( !$pheno_data{$key}->{'planting_date'} ) {
      <span class="glyphicon glyphicon-remove-sign" style="color: #A94442; font-size: 150%"></span>
% } else {
      <span class="glyphicon glyphicon-ok-sign" style="color: #3c7d3d; font-size: 150%"></span>
% }
    </td>
    <td>
% if ( !$pheno_data{$key}->{'harvest_date'} ) {
      <span class="glyphicon glyphicon-remove-sign" style="color: #A94442; font-size: 150%"></span>
% } else {
      <span class="glyphicon glyphicon-ok-sign" style="color: #3c7d3d; font-size: 150%"></span>
% }
    </td>
    <td>
% if ( $pheno_data{$key}->{'trait_count_agro'} eq 0 ) {
      <span class="glyphicon glyphicon-remove-sign" style="color: #A94442; font-size: 150%"></span>
% } else {
      <span class="glyphicon glyphicon-ok-sign" style="color: #3c7d3d; font-size: 150%"></span>
% }
    </td>
    <td>
% if ( $pheno_data{$key}->{'trait_count_drone'} eq 0 ) {
      <span class="glyphicon glyphicon-remove-sign" style="color: #A94442; font-size: 150%"></span>
% } else {
      <span class="glyphicon glyphicon-ok-sign" style="color: #3c7d3d; font-size: 150%"></span>
% }
    </td>
    <td><% $pheno_data{$key}->{'trait_count'} %></td>
    <td><% $pheno_data{$key}->{'trait_names'} %></td>
    <td><% $pheno_data{$key}->{'plot_count'} %></td>
    <td>
      <a href="/breeders/trials/phenotype/download?trial_list=[<% $pheno_data{$key}->{'project_id'} %>]">
        <span class='glyphicon glyphicon-download-alt'></span>&nbsp;&nbsp;XLSX
      </a>
    </td>
  </tr>
% }
</table>

<br /><br /><br />

<script type="text/javascript">
  jQuery(document).on("ready", () => {
    
    // Refresh the page when the year or breeding program is changed
    jQuery("#year, #breeding_program").on("change", () => {
      window.location = "/guides/annual-summary-details?year=" + jQuery("#year").val() + "&program=" + jQuery("#breeding_program").val();
    });

    // Add Geno Marker Counts
    jQuery(".marker-count").each((i, obj) => {
      const protocol_id = jQuery(obj).data("id");
      jQuery.ajax({
        url: "/ajax/genotyping_protocol/marker_count",
        method: 'GET',
        data: {
          'genotyping_protocol_id': protocol_id
        },
        success: function(response) {
          let html = "";
          if ( response && response.marker_count ) {
            html = response.marker_count;
          }
          jQuery(obj).html(html);
        },
        error: function(response) {
          console.log("ERROR: Could not get marker count for protocol: " + protocol_id);
        }
      });
    });

    // Add Geno Download Links
    jQuery(".geno-download").each((i, obj) => {
      const project_id = jQuery(obj).data("id");
      jQuery.ajax( {
        'url': '/ajax/genotyping_project/has_archived_vcf',
        'method': 'GET',
        'data': { 
          'genotyping_project_id': project_id,
          'limit': true
        },
        'success': function(response) {
          let html = "File not found";
          if ( response && response[project_id] ) {
            const data = response[project_id][0];
            if ( data && data.exists === "true" ) {
              html = `<a href='/ajax/genotyping_project/download_archived_vcf?genotyping_project_id=${project_id}&basename=${data.basename}' target='_blank'>`
              html += "<span class='glyphicon glyphicon-download-alt'></span>&nbsp;&nbsp;VCF";
              html += '</a>';
            }
          }
          jQuery(obj).html(html);
        },
        error: function(response) {
          console.log("ERROR: Could not get geno download for project: " + project_id);
        }
      });
    });

    // Add Pheno Layout Checks
    jQuery(".pheno-layout").each((i, obj) => {
      const project_id = jQuery(obj).data("id");
      jQuery.ajax( {
        'url': '/ajax/search/trial_layout',
        'method': 'GET',
        'data': { 
          'trial_id': project_id,
        },
        'success': function(response) {
          let html = '<span class="glyphicon glyphicon-remove-sign" style="color: #A94442; font-size: 150%"></span>';
          if ( response && response.has_trial_layout === "true" ) {
            html = '<span class="glyphicon glyphicon-ok-sign" style="color: #3c7d3d; font-size: 150%"></span>';
          }
          jQuery(obj).html(html);
        },
        error: function(response) {
          console.log("ERROR: Could not get pheno layout for project: " + project_id);
        }
      });
    });

  });
</script>

<style>
  .subtitle {
    font-size: 120%;
    font-weight: 600;
    margin-top: 20px;
  }
  .description {
    font-size: 100%;
    color: #666;
  }

  .summary-table {
    font-family: Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;
  }

  .summary-table td, .summary-table th {
    border: 1px solid #ddd;
    padding: 8px;
  }

  .summary-table tr:nth-child(even) {
    background-color: #f2f2f2;
  }

  .summary-table tr:hover {
    background-color: #EBDEDB
  }

  .summary-table th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #C84C30;
    color: white;
  }
</style>